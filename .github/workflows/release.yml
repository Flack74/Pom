name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
          - os: windows
            arch: arm64

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Build Web UI
      run: |
        cd web/frontend
        npm install
        npm run build
        cd ../..
    
    - name: Build Binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        go build -ldflags "-s -w" -o pom${{ matrix.os == 'windows' && '.exe' || '' }} .
        
    - name: Create Archive
      run: |
        if [ "${{ matrix.os }}" = "windows" ]; then
          zip pom-${{ matrix.os }}-${{ matrix.arch }}.zip pom.exe README.md LICENSE
        else
          tar -czf pom-${{ matrix.os }}-${{ matrix.arch }}.tar.gz pom README.md LICENSE
        fi
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pom-${{ matrix.os }}-${{ matrix.arch }}
        path: pom-${{ matrix.os }}-${{ matrix.arch }}.*

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Artifacts
      uses: actions/download-artifact@v4
    
    - name: Build DEB Package
      run: |
        mkdir -p packaging/deb/usr/bin
        mkdir -p packaging/deb/DEBIAN
        cp pom-linux-amd64/pom packaging/deb/usr/bin/
        cat > packaging/deb/DEBIAN/control << EOF
        Package: pom
        Version: ${GITHUB_REF#refs/tags/v}
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Flack74 <puspendrachawlax@gmail.com>
        Description: Advanced Pomodoro timer with CLI and Web UI
         Features AI insights, multi-profiles, cloud sync, and plugin system.
        EOF
        dpkg-deb --build packaging/deb pom_${GITHUB_REF#refs/tags/v}_amd64.deb
    
    - name: Build RPM Package
      run: |
        mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
        cp pom-linux-amd64/pom ~/rpmbuild/SOURCES/
        cat > ~/rpmbuild/SPECS/pom.spec << EOF
        Name: pom
        Version: ${GITHUB_REF#refs/tags/v}
        Release: 1%{?dist}
        Summary: Advanced Pomodoro timer
        License: MIT
        URL: https://github.com/Flack74/pom
        Source0: pom
        
        %description
        Advanced Pomodoro timer with CLI and Web UI, featuring AI insights.
        
        %install
        mkdir -p %{buildroot}/usr/bin
        cp %{SOURCE0} %{buildroot}/usr/bin/pom
        
        %files
        /usr/bin/pom
        EOF
        rpmbuild -bb ~/rpmbuild/SPECS/pom.spec
        cp ~/rpmbuild/RPMS/x86_64/pom-*.rpm .
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pom-*-*.tar.gz
          pom-*-*.zip
          *.deb
          *.rpm
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  chocolatey:
    needs: build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Windows Binary
      uses: actions/download-artifact@v4
      with:
        name: pom-windows-amd64
    
    - name: Create Chocolatey Package
      run: |
        mkdir chocolatey
        cd chocolatey
        choco new pom --version ${env:GITHUB_REF -replace 'refs/tags/v',''}
        # Update nuspec and install script
        # This would need proper Chocolatey package configuration
    
  snap:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Snap
      uses: snapcore/action-build@v1
      id: build
    
    - name: Upload Snap
      uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
      with:
        snap: ${{ steps.build.outputs.snap }}
        release: stable

  flatpak:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Flatpak
      uses: flatpak/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: pom.flatpak
        manifest-path: packaging/flatpak/com.github.Flack74.pom.yml